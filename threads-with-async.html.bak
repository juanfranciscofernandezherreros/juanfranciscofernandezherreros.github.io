@Async
@CompletableFuture

Vamos a configurar los threads en SpringBoot usando la isguiente configuracion

@Configuration
@EnableAsync
public class AsyncConfiguration {

  private static final Logger LOGGER = LoggerFactory.getLogger(AsyncConfiguration.class);

  @Bean(name = "taskExecutor")
  public Executor taskExecutor() {
    LOGGER.debug("Creating Async Task Executor");
    final ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();
    executor.setCorePoolSize(1);
    executor.setMaxPoolSize(8);
    executor.setQueueCapacity(0); /** Cuantas peticiones en cola **/
    executor.setThreadNamePrefix("Test-");
    executor.initialize();
    return executor;
  }

}

Ahora vamos a la capa del servicio

@Service
public class CSVService_1 {

  @Autowired
  RiskGroupRepository repository;

  @Autowired
  StaticDataRepository staticDataRepository;

  private static final Logger LOGGER = LoggerFactory.getLogger(CSVService_1.class);

  @Async
  public CompletableFuture<ByteArrayInputStream> load(String model) {
    LOGGER.info("[CSVService1] load , {}" + model);
    CompletableFuture completableFuture = null;
    if(model.equals("riskgroups")) {
      List<RiskGroupDAO> tutorials = repository.findAll();
	}
	}